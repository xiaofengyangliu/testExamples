<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!--websocket使用，其他功能未知-->
    <mvc:annotation-driven/>

    <!-- 自动扫描注解，使其认为spring mvc的控制器 -->
    <context:component-scan base-package="com.*"> </context:component-scan>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射， 配置一个基于注解的定制的WebBindingInitializer，解决日期转换问题，方法级别的处理器映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="cacheSeconds" value="0"/>
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/>
                <!-- json转换器 -->
            </list>
        </property>
        <property name="webBindingInitializer">
            <bean class="org.jeecgframework.core.interceptors.MyWebBinding"/>
        </property>
    </bean>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="3">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/webpage/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--上传文件 http://my.oschina.net/u/729917/blog/190629-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8">
        <property name="maxUploadSize" value="1000000000"/>
        <property name="maxInMemorySize" value="4096000"/>
        <!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常-->
        <property name="resolveLazily" value="true"/>
    </bean> 
    

    <!-- 系统错误配置  ,跳转的视图配置见本页 defaultViewResolver-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- 默认为500，系统错误(error.jsp)  -->
        <property name="defaultErrorView" value="error/unknowError"/>
        <property name="defaultStatusCode" value="500"/>
        <property name="exceptionMappings">
            <props>
                <!-- 这里你可以根据需要定义N多个错误异常转发 -->
                <!-- 数据库错误(dbError.jsp) -->
                <prop key="java.sql.SQLException">error/dbError</prop>
                <!-- 其他错误为'未定义错误'(unknowError.jsp)  -->
                <prop key="java.lang.Exception">error/error</prop>
            </props>
        </property>
    </bean>


    <!-- 拦截器 -->
    <mvc:interceptors>
        <!--字符集拦截器-->
        <mvc:interceptor >
            <mvc:mapping path="/**"/>
            <bean class="org.jeecgframework.core.interceptors.EncodingInterceptor"/>
        </mvc:interceptor>
        <!--用户登录校验拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="org.jeecgframework.core.interceptors.AuthInterceptor">
                <!--不拦截的访问方法-->
                <property name="excludeUrls">
                    <list>
                        <value>loginController.do?login</value>
                        <value>loginController.do?showMain</value>
                        <value>loginController.do?toLogin</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>

</beans>